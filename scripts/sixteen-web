#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
from sixteen.utilities import HexRead
from sixteen.web.server import DCPU16Protocol
from txws import WebSocketFactory
from twisted.internet import protocol, reactor


parser = argparse.ArgumentParser(
	description='Run a DCPU-16 binary, displaying the output on a local webserver.'
)

parser.add_argument('--little', '-l', dest="big_endian", action='store_false', 
	help="Denote that this file should be parsed as little-endian. "
	"(Default: big-endian).",
)

parser.add_argument('--hex', dest="bin", action='store_false', 
	help="Denote that this file should be parsed as an ASCII hex dump. "
	"(Default: binary)"
)

parser.add_argument('file',
	help="The binary file to run."
)

args = parser.parse_args()

# open the file from the command-line, if it's supposed to be a bin
if args.bin:
	f = open(args.file)
else:
	f = HexRead(args.file)


code = []

while True:
    word = [ord(c) for c in f.read(2)]
    if len(word) != 2:
        break
    if args.big_endian:
        top, bottom = word
    else:
        bottom, top = word
    word_int = (top << 8) + bottom
    code.append(word_int)

f.close()

class DCPU16Factory(protocol.Factory):
    protocol = DCPU16Protocol
    code = code

    def buildProtocol(self, addr):
        return self.protocol(self.code)


#TODO: host the files here, too.
reactor.listenTCP(8080, WebSocketFactory(DCPU16Factory()))
reactor.run()

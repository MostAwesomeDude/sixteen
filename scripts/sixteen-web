#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import argparse
from sixteen.utilities import HexRead
import sixteen.web
from sixteen.web.server import DCPU16Protocol
from txws import WebSocketFactory
from twisted.internet import protocol, reactor
from twisted.web.server import Site
from twisted.web.static import File


parser = argparse.ArgumentParser(
	description='Run a DCPU-16 binary, displaying the output on a local webserver.'
)

parser.add_argument('--little', '-l', dest="big_endian", action='store_false', 
	help="Denote that this file should be parsed as little-endian. "
	"(Default: big-endian).",
)

parser.add_argument('--hex', dest="bin", action='store_false', 
	help="Denote that this file should be parsed as an ASCII hex dump. "
	"(Default: binary)"
)

parser.add_argument('file',
	help="The binary file to run."
)

args = parser.parse_args()



class DCPU16Factory(protocol.Factory):
    protocol = DCPU16Protocol

    def buildProtocol(self, addr):
        # open the file from the command-line, if it's supposed to be a bin
        if args.bin:
            f = open(args.file)
        else:
            f = HexRead(args.file)
        # read it all to the list `code`.
        code = []
        while True:
            word = [ord(c) for c in f.read(2)]
            if len(word) != 2:
                break
            if args.big_endian:
                top, bottom = word
            else:
                bottom, top = word
            word_int = (top << 8) + bottom
            code.append(word_int)
        # close the file
        f.close()
        return self.protocol(code)


# listen on port for websocket connections
reactor.listenTCP(4314, WebSocketFactory(DCPU16Factory()))

# listen on port 1268 for http, serving the directory where sixteen.web is.
directory = os.path.dirname(sixteen.web.__file__)
reactor.listenTCP(1268, Site(File(directory)))

print "Point your browser to http://localhost:1268"

reactor.run()
